# apiVersion: v1
# kind: Pod
# metadata:
#   creationTimestamp: '2024-02-01T12:58:01Z'
#   generateName: dendrite-postgresql-
#   labels:
#     app.kubernetes.io/component: primary
#     app.kubernetes.io/instance: dendrite
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: postgresql
#     apps.kubernetes.io/pod-index: '0'
#     controller-revision-hash: dendrite-postgresql-54db885899
#     helm.sh/chart: postgresql-12.1.7
#     statefulset.kubernetes.io/pod-name: dendrite-postgresql-0
#   name: dendrite-postgresql-0
#   namespace: monitoring
#   ownerReferences:
#     - apiVersion: apps/v1
#       blockOwnerDeletion: true
#       controller: true
#       kind: StatefulSet
#       name: dendrite-postgresql
#       uid: 9f605ef1-416a-4bea-b25f-166dd8cf4eda
#   resourceVersion: '8479828'
#   uid: 50d92a4a-a481-4241-8869-84f45b4c591d
# spec:
#   affinity:
#     podAntiAffinity:
#       preferredDuringSchedulingIgnoredDuringExecution:
#         - podAffinityTerm:
#             labelSelector:
#               matchLabels:
#                 app.kubernetes.io/component: primary
#                 app.kubernetes.io/instance: dendrite
#                 app.kubernetes.io/name: postgresql
#             topologyKey: kubernetes.io/hostname
#           weight: 1
#   containers:
#     - env:
#         - name: BITNAMI_DEBUG
#           value: 'false'
#         - name: POSTGRESQL_PORT_NUMBER
#           value: '5432'
#         - name: POSTGRESQL_VOLUME_DIR
#           value: /bitnami/postgresql
#         - name: PGDATA
#           value: /bitnami/postgresql/data
#         - name: POSTGRES_USER
#           value: dendrite
#         - name: POSTGRES_POSTGRES_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               key: postgres-password
#               name: dendrite-postgresql
#         - name: POSTGRES_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               key: password
#               name: dendrite-postgresql
#         - name: POSTGRES_DB
#           value: dendrite
#         - name: POSTGRESQL_ENABLE_LDAP
#           value: 'no'
#         - name: POSTGRESQL_ENABLE_TLS
#           value: 'no'
#         - name: POSTGRESQL_LOG_HOSTNAME
#           value: 'false'
#         - name: POSTGRESQL_LOG_CONNECTIONS
#           value: 'false'
#         - name: POSTGRESQL_LOG_DISCONNECTIONS
#           value: 'false'
#         - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
#           value: 'off'
#         - name: POSTGRESQL_CLIENT_MIN_MESSAGES
#           value: error
#         - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
#           value: pgaudit
#       image: 'docker.io/bitnami/postgresql:15.1.0'
#       imagePullPolicy: IfNotPresent
#       livenessProbe:
#         exec:
#           command:
#             - /bin/sh
#             - '-c'
#             - >-
#               exec pg_isready -U "dendrite" -d "dbname=dendrite" -h 127.0.0.1 -p
#               5432
#         failureThreshold: 6
#         initialDelaySeconds: 30
#         periodSeconds: 10
#         successThreshold: 1
#         timeoutSeconds: 5
#       name: postgresql
#       ports:
#         - containerPort: 5432
#           name: tcp-postgresql
#           protocol: TCP
#       readinessProbe:
#         exec:
#           command:
#             - /bin/sh
#             - '-c'
#             - '-e'
#             - >
#               exec pg_isready -U "dendrite" -d "dbname=dendrite" -h 127.0.0.1 -p
#               5432

#               [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f
#               /bitnami/postgresql/.initialized ]
#         failureThreshold: 6
#         initialDelaySeconds: 5
#         periodSeconds: 10
#         successThreshold: 1
#         timeoutSeconds: 5
#       resources:
#         requests:
#           cpu: 250m
#           memory: 256Mi
#       securityContext:
#         runAsUser: 1001
#       terminationMessagePath: /dev/termination-log
#       terminationMessagePolicy: File
#       volumeMounts:
#         - mountPath: /dev/shm
#           name: dshm
#         - mountPath: /bitnami/postgresql
#           name: data
#         - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
#           name: kube-api-access-7mnh9
#           readOnly: true
#   dnsPolicy: ClusterFirst
#   enableServiceLinks: true
#   hostname: dendrite-postgresql-0
#   nodeName: rpi1
#   preemptionPolicy: PreemptLowerPriority
#   priority: 0
#   restartPolicy: Always
#   schedulerName: default-scheduler
#   securityContext:
#     fsGroup: 1001
#   serviceAccount: default
#   serviceAccountName: default
#   subdomain: dendrite-postgresql-hl
#   terminationGracePeriodSeconds: 30
#   tolerations:
#     - effect: NoExecute
#       key: node.kubernetes.io/not-ready
#       operator: Exists
#       tolerationSeconds: 300
#     - effect: NoExecute
#       key: node.kubernetes.io/unreachable
#       operator: Exists
#       tolerationSeconds: 300
#   volumes:
#     - name: data
#       persistentVolumeClaim:
#         claimName: data-dendrite-postgresql-0
#     - emptyDir:
#         medium: Memory
#       name: dshm
#     - name: kube-api-access-7mnh9
#       projected:
#         defaultMode: 420
#         sources:
#           - serviceAccountToken:
#               expirationSeconds: 3607
#               path: token
#           - configMap:
#               items:
#                 - key: ca.crt
#                   path: ca.crt
#               name: kube-root-ca.crt
#           - downwardAPI:
#               items:
#                 - fieldRef:
#                     apiVersion: v1
#                     fieldPath: metadata.namespace
#                   path: namespace
# status:
#   conditions:
#     - lastProbeTime: null
#       lastTransitionTime: '2024-02-01T12:58:32Z'
#       status: 'True'
#       type: Initialized
#     - lastProbeTime: null
#       lastTransitionTime: '2024-02-01T12:58:32Z'
#       message: 'containers with unready status: [postgresql]'
#       reason: ContainersNotReady
#       status: 'False'
#       type: Ready
#     - lastProbeTime: null
#       lastTransitionTime: '2024-02-01T12:58:32Z'
#       message: 'containers with unready status: [postgresql]'
#       reason: ContainersNotReady
#       status: 'False'
#       type: ContainersReady
#     - lastProbeTime: null
#       lastTransitionTime: '2024-02-01T12:58:32Z'
#       status: 'True'
#       type: PodScheduled
#   containerStatuses:
#     - containerID: >-
#         containerd://1e0c58e7e881c524e25644626ee6a279181f1e48dd4540610e7483ab6da66bd2
#       image: 'docker.io/bitnami/postgresql:15.1.0'
#       imageID: >-
#         docker.io/bitnami/postgresql@sha256:1099d1d9ff33b647ec816f4da42d8ce41b0761a5334f3fdf120072200a65f95c
#       lastState:
#         terminated:
#           containerID: >-
#             containerd://1e0c58e7e881c524e25644626ee6a279181f1e48dd4540610e7483ab6da66bd2
#           exitCode: 1
#           finishedAt: '2024-02-01T13:05:33Z'
#           reason: Error
#           startedAt: '2024-02-01T13:05:33Z'
#       name: postgresql
#       ready: false
#       restartCount: 6
#       started: false
#       state:
#         waiting:
#           message: >-
#             back-off 5m0s restarting failed container=postgresql
#             pod=dendrite-postgresql-0_monitoring(50d92a4a-a481-4241-8869-84f45b4c591d)
#           reason: CrashLoopBackOff
#   hostIP: 192.168.1.201